#N canvas 224 23 972 578 12;
#X obj 60 443 cnv 15 275 50 empty empty empty 5 12 0 14 -232693 -66577
0;
#X text 67 458 H(z) = ------------------------------;
#X text 120 447 a0 + a1 * z^-1 + a2 * z^-2;
#X obj 588 280 rpole~;
#X obj 588 235 noise~;
#X obj 658 236 sig~ 0.1;
#X obj 541 455 cnv 15 320 55 empty empty empty 5 12 0 14 -233017 -66577
0;
#X text 675 467 _____________;
#X text 708 460 1;
#X text 554 475 H(z) =;
#X text 613 461 Y(z);
#X text 614 486 X(z);
#X text 605 468 _______;
#X text 660 473 =;
#X text 679 484 1 - a * z^-1;
#X text 126 468 1 - b1 * z^-1 - b2 * z^-2;
#X obj 242 216 pic ../files/SOS.gif;
#X text 49 180 Zero 1 ==>;
#X text 52 247 Zero 2 ==>;
#X obj 545 319 out~;
#X text 348 177 <== Pole 1;
#X text 348 248 <== Pole 2;
#N canvas 259 23 692 706 get-H(z) 0;
#X obj 165 56 cnv 15 330 40 empty empty empty 5 12 0 14 -233017 -66577
0;
#X obj 188 609 cnv 15 290 50 empty empty empty 5 12 0 14 -232693 -66577
0;
#X text 173 59 y(n) = a0 * x(n) + a1 * x(n-1) + a2 * x(n-2) + b1 *
y(n-1) + b2 * y(n-2), f 44;
#X text 253 615 a0 + a1*z^-1 + a2*z^-2;
#X text 195 625 H(z) = --------------------------;
#X text 250 374 a0 + a1*z^-1 + a2*z^-2;
#X text 181 358 X(z) = -----------------------------------;
#X text 136 438 H(z) =;
#X text 326 424 Y(z);
#X text 182 432 ____________________________________________________________
;
#X text 212 517 H(z) =;
#X text 272 505 Y(z) * a0 + a1*z^-1 + a2*z^-2;
#X text 260 512 ___________________________________;
#X text 258 636 1 - b1*z^-1 - b2*z^-2;
#X text 186 159 Y(z) = a0 * X(z) + a1 * X(z)z^-1 + a2 * X(z)z^-2 +
b1 * Y(z)z^-1 + b2 * Y(z)z^-2, f 49;
#X text 108 255 Y(z) - b1*Y(z)z^-1 - b2*Y(z)z^-2 = a0*X(z) + a1*X(z)z^-1
+ a2*X(z)z^-2, f 71;
#X text 110 298 Y(z) - b1*Y(z)z^-1 - b2*Y(z)z^-2 = X(z) * (a0 + a1*z^-1
+ a2*z^-2), f 66;
#X text 230 345 Y(z) - b1*Y(z)z^-1 - b2*Y(z)z^-2;
#X text 183 449 (Y(z) - b1*Y(z)z^-1 - b2*Y(z)z^-2 / a0 + a1*z^-1 +
a2*z^-2);
#X text 265 530 Y(z) - b1*Y(z)z^-1 - b2*Y(z)z^-2;
#X text 182 576 Tansfer Function:;
#X text 150 25 Difference equation:;
#X text 162 126 In the transfer function notation;
#X text 58 225 Isolate X(z):;
#X restore 254 494 pd get-H(z);
#X text 43 36 Taking a biquad section as an example \, let's present
the concept of Poles and Zeros. Poles are feedback coefficients \,
and Zeros are feedforward coefficients. Note that by defining a filter
as a 2-Pole / 2-Zero filter \, you're also defining its order., f
61;
#X text 76 394 Transfer function of [biquad~]:;
#X text 339 446 <== Zeros (a1/a2);
#X text 339 471 <== Poles (b1/b2);
#X text 47 335 Hence \, a1 & a2 are Zeros and b1 & b2 are Poles (note
a0 isn't a zero). In a transfer function \, the Zeroes are the numerators
\, and poles the denominator. Open [pd get-H(z)] to see how to derive
the transfer function from the difference equation.;
#X text 727 236 pole coefficient;
#X text 512 135 The [rpole~] object is a one pole filter object provided
as a native object in Pd. It takes a pole coeficient in the right inlet.
This is nothing but the IIR filter example we've been dealing with.
;
#X obj 701 281 fexpr~ $x[0] + $x2 * $y[-1];
#X obj 701 321 out~;
#X text 540 432 Transfer Function:;
#X text 781 482 <== Pole;
#X text 508 45 A pole represents a resonance \, and a zero is an anti
resonance \, this is where they get their names from. We'll see later
how they act \, when the Z-Plane is presented.;
#X connect 3 0 19 0;
#X connect 3 0 19 1;
#X connect 4 0 3 0;
#X connect 4 0 30 0;
#X connect 5 0 3 1;
#X connect 5 0 30 1;
#X connect 30 0 31 0;
#X connect 30 0 31 1;
