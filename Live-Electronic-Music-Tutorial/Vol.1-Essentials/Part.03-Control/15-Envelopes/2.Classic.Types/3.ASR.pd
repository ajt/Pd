#N canvas 245 55 1147 655 12;
#X obj 271 224 vsl 16 80 0 1 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 0 1;
#X obj 196 203 *~;
#X obj 146 147 osc~ 440;
#X obj 153 252 out~;
#X text 325 130 ASR;
#X obj 554 186 *~;
#X obj 627 189 vsl 18 100 0 1 0 0 ewtwet wefwert empty 0 -9 0 10 -228856
-1 -1 0 1;
#X text 650 279 0;
#X text 650 185 1;
#X obj 572 94 tgl 20 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 483 142 osc~ 440;
#X obj 616 97 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 684 97 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 617 79 attack;
#X text 686 79 release;
#X text 540 96 gate;
#X obj 574 505 *~;
#X obj 516 468 osc~ 440;
#X obj 568 420 bng 16 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 592 451 timed.gate~ 150;
#X obj 572 125 asr~ 50 250, f 13;
#X obj 592 477 asr~ 50 250;
#X obj 921 187 *~;
#X obj 873 152 osc~ 440;
#X obj 939 111 tgl 20 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 878 239 out~;
#X obj 939 150 glide~ 500;
#X obj 996 217 vsl 18 100 0 1 0 0 ewtwet wefwert empty 0 -9 0 10 -228856
-1 -1 0 1;
#X text 1019 307 0;
#X text 1019 213 1;
#X text 963 111 gate;
#X obj 511 230 out~;
#X obj 558 544 out~;
#X obj 240 532 vsl 16 80 0 1 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 0 1;
#X obj 165 497 *~;
#X obj 114 443 osc~ 440;
#X obj 122 546 out~;
#X obj 183 421 tgl 20 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X text 209 419 gate;
#X obj 922 454 *~;
#X obj 868 418 osc~ 440;
#X obj 940 378 tgl 20 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 879 506 out~;
#X obj 997 484 vsl 18 100 0 1 0 0 ewtwet wefwert empty 0 -9 0 10 -228856
-1 -1 0 1;
#X text 1020 574 0;
#X text 1020 480 1;
#X text 964 378 gate;
#X obj 940 417 glide2~ 500;
#X text 28 14 An "ASR" ("Attack / Sustain / Release") envelope has
a sustain stage in the middle. So after the attack we have the amplitude
being sustained before the release stage., f 56;
#X text 479 335 You could trigger this envelope with an impulse or
a bang and schedule a release with the [timed.gate~] object from ELSE.
, f 40;
#X text 812 31 The [glide~] and [glide2~] objects can also behave as
a kind of ASR envelope generator triggered by a gate., f 43;
#X text 461 27 The [asr~] external from ELSE is dedicated to generating
this type of envelope and expects a gate. Check its help file for more
details., f 45;
#X obj 592 419 imp~ 1;
#X obj 214 157 envgen~ 50 1 450 1 500 0;
#X obj 214 130 bng 16 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 27 64 Below we use [envgen~] and give it a sustain stage by
generatin a line with a repeated destination. The attack is then 50
ms \, the sustain stage takes 450 ms and the release is 500 ms long.
, f 56;
#X obj 183 464 envgen~ 150 1 750 0 -suspoint 1;
#X text 30 330 You can trigger [envgen~] with a gate \, which is the
same as pressing/releasing a note on your MIDI controller. You just
need to define a sustain point and the sustain stage depends on how
long the gate is on., f 53;
#X obj 997 456 s2f~;
#X obj 240 506 s2f~;
#X obj 271 198 s2f~;
#X obj 996 189 s2f~;
#X obj 627 161 s2f~;
#X connect 1 0 3 1;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 5 0 31 0;
#X connect 5 0 31 1;
#X connect 9 0 20 0;
#X connect 10 0 5 0;
#X connect 11 0 20 1;
#X connect 12 0 20 2;
#X connect 16 0 32 0;
#X connect 16 0 32 1;
#X connect 17 0 16 0;
#X connect 18 0 19 0;
#X connect 19 0 21 0;
#X connect 20 0 5 1;
#X connect 20 0 62 0;
#X connect 21 0 16 1;
#X connect 22 0 25 0;
#X connect 22 0 25 1;
#X connect 23 0 22 0;
#X connect 24 0 26 0;
#X connect 26 0 22 1;
#X connect 26 0 61 0;
#X connect 34 0 36 1;
#X connect 34 0 36 0;
#X connect 35 0 34 0;
#X connect 37 0 56 0;
#X connect 39 0 42 0;
#X connect 39 0 42 1;
#X connect 40 0 39 0;
#X connect 41 0 47 0;
#X connect 47 0 39 1;
#X connect 47 0 58 0;
#X connect 52 0 19 0;
#X connect 53 0 1 1;
#X connect 53 0 60 0;
#X connect 54 0 53 0;
#X connect 56 0 34 1;
#X connect 56 0 59 0;
#X connect 58 0 43 0;
#X connect 59 0 33 0;
#X connect 60 0 0 0;
#X connect 61 0 27 0;
#X connect 62 0 6 0;
