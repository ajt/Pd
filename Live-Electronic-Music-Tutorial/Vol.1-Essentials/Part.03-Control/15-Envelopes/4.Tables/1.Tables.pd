#N canvas 618 48 690 730 12;
#X obj 132 273 bng 30 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 114 352 *~;
#X obj 55 285 osc~ 440;
#X text 303 442 0;
#X text 305 245 1;
#X obj 319 253 cnv 15 298 198 empty empty empty 20 12 0 14 -228856
-66577 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-hann 22050 float 0;
#X coords 0 1 22049 0 300 200 1 0 0;
#X restore 318 252 graph;
#X text 469 108 ms;
#X obj 494 109 nbx 5 16 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 13
-228856 -1 -1 500 256;
#X text 303 683 0;
#X text 305 486 1;
#X obj 319 494 cnv 15 298 198 empty empty empty 20 12 0 14 -228856
-66577 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-sine 22050 float 0;
#X coords 0 1 22049 0 300 200 1 0 0;
#X restore 318 493 graph;
#X text 47 29 In this section we generate functions in tables and use
them as envelopes. The first is called "hann" \, which is nothing but
an inverted cosine adjusted to the range from 0 to 1 (this is also
one of the functions used in the [fader~] object)., f 55;
#X obj 114 386 out~;
#X obj 494 65 initmess 500;
#X obj 132 320 tabplay~ \$0-hann;
#X obj 171 483 bng 30 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 153 562 *~;
#X obj 94 495 osc~ 440;
#X obj 153 596 out~;
#X obj 171 530 tabplay~ \$0-sine;
#N canvas 372 23 893 355 generate 0;
#X obj 199 34 inlet;
#X obj 99 227 osc~;
#X msg 124 200 0.5;
#X obj 173 288 tabwrite~ \$0-hann;
#X obj 318 166 send \$0-sine;
#X msg 308 135 resize \$1;
#X obj 99 253 rescale~;
#X obj 99 170 trigger f b;
#X obj 114 103 v sr_khz;
#X obj 199 73 expr 1000 / $f1 \; $f1 * sr_khz;
#X obj 114 78 sr~ -khz;
#X floatatom 308 112 5 0 0 0 - - -, f 5;
#X obj 199 142 trigger f b;
#X msg 237 174 0;
#X obj 273 247 tabwrite~ \$0-sine;
#X floatatom 199 114 5 0 0 0 - - -, f 5;
#X obj 199 175 / 2;
#X obj 221 205 sine~;
#X obj 308 192 send \$0-hann;
#X text 461 117 The table size is given in ms and we calculate the
number of samples that depends on the sample rate to resize the table
\, then we also get the frequency of this period in samples and feed
it into oscillators that we use to generate the waveform and record
it into tables with the native [tabwrite~] object. Note we use half
the frequency for the sine function because we just need half of it.
, f 55;
#X obj 39 80 setdsp~ 1;
#X connect 0 0 9 0;
#X connect 1 0 6 0;
#X connect 2 0 1 1;
#X connect 5 0 4 0;
#X connect 5 0 18 0;
#X connect 6 0 3 0;
#X connect 7 0 1 0;
#X connect 7 1 2 0;
#X connect 7 1 3 0;
#X connect 9 0 15 0;
#X connect 9 1 11 0;
#X connect 10 0 8 0;
#X connect 11 0 5 0;
#X connect 12 0 16 0;
#X connect 12 1 13 0;
#X connect 12 1 14 0;
#X connect 13 0 17 1;
#X connect 15 0 12 0;
#X connect 15 0 7 0;
#X connect 16 0 17 0;
#X connect 17 0 14 0;
#X restore 494 140 pd generate \; tables;
#X text 47 104 The next is here called "sine" but it's actually just
the first half the sine function (this is also used in [fader~]). Open
the [pd tables] subpatch so see how to create these functions., f
55;
#X text 48 172 The native [tabplay~] object is used to load the table
and trigger the envelope. Click on the bangs below., f 55;
#X text 565 108 duration;
#X connect 0 0 16 0;
#X connect 1 0 14 0;
#X connect 1 0 14 1;
#X connect 2 0 1 0;
#X connect 8 0 22 0;
#X connect 15 0 8 0;
#X connect 16 0 1 1;
#X connect 17 0 21 0;
#X connect 18 0 20 0;
#X connect 18 0 20 1;
#X connect 19 0 18 0;
#X connect 21 0 18 1;
