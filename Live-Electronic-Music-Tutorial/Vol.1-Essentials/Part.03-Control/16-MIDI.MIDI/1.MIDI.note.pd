#N canvas 208 100 951 613 12;
#X obj 245 491 *~;
#X text 98 339 pitch;
#X obj 147 400 mtof;
#X text 100 351 MIDI;
#X text 119 426 Hz;
#X obj 147 451 osc~;
#X floatatom 147 426 5 0 0 0 - - -, f 5;
#X floatatom 205 345 5 0 0 0 - - -, f 5;
#X floatatom 263 346 5 0 0 0 - - -, f 5;
#X text 298 345 ms;
#X obj 208 307 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X obj 147 304 bng 30 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 263 458 adsr~ 50 100 0.5 200;
#X obj 263 401 / 127;
#X obj 245 530 out~;
#X obj 263 430 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X text 18 94 A Note message needs Pitch and Velocity values. In a
Note On message \, the velocity is the intensity of the note \, because
the faster the key action was \, the more intense the note should be.
A note off message \, on the other hand \, sends the same pitch number
but a velocity of 0 as a cue the key was released!, f 62;
#X msg 147 344 69;
#X obj 147 373 makenote 127 1000;
#X text 267 327 duration;
#X text 18 186 The raw note MIDI data is in the range from 0 to 127
\, but Pd's [makenote] doesn't really care and can deal with any kind
of float input! In this example \, [makenote]'s arguments initially
set a velocity of 127 and schedules a note off after 1000 ms of the
note on - but you can change this via inlets., f 62;
#X text 18 16 MIDI controllers send "Note" messages from key action.
A "Note On" message is sent when a key is pressed and a "Note Off"
when it is released. The native object [makenote] emulates MIDI notes
\, it generates a Note On message when it receives a MIDI pitch in
the left inlet and schedules a Note Off., f 62;
#X text 242 306 velocity;
#X obj 572 483 *~;
#X text 648 344 velocity;
#X obj 517 373 mtof;
#X text 489 388 Hz;
#X obj 517 438 osc~;
#X floatatom 517 403 5 0 0 0 - - -, f 5;
#X obj 517 345 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 590 347 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 474 344 Pitch;
#X obj 590 436 adsr~ 50 100 0.5 200;
#X obj 590 395 / 127;
#X obj 550 524 out~;
#X obj 848 196 notein;
#X obj 517 224 keyboard 17 80 3 3;
#X obj 517 318 unpack;
#X text 480 107 You could set a MIDI controller now if you have one
and use [notein] to receive MIDI note information. To set your MIDI
device \, fo to "Pd => Preferences => MIDI"., f 62;
#X text 480 159 In case you don't have one \, you can have some fun
using the [keyboard] object from ELSE \, instead., f 62;
#X text 480 16 This example uses the MIDI note information to set the
frequency of an oscillator and trigger [adsr~]. In the context of MIDI
values in the range of 0 to 127 \, we need [mtof] to convert the pitch
to hertz and divide the velocity by 127 to trigger the envelope.,
f 62;
#X connect 0 0 14 0;
#X connect 0 0 14 1;
#X connect 2 0 6 0;
#X connect 5 0 0 0;
#X connect 6 0 5 0;
#X connect 7 0 18 1;
#X connect 8 0 18 2;
#X connect 10 0 7 0;
#X connect 11 0 17 0;
#X connect 12 0 0 1;
#X connect 13 0 15 0;
#X connect 15 0 12 0;
#X connect 17 0 18 0;
#X connect 18 0 2 0;
#X connect 18 1 13 0;
#X connect 23 0 34 0;
#X connect 23 0 34 1;
#X connect 25 0 28 0;
#X connect 27 0 23 0;
#X connect 28 0 27 0;
#X connect 29 0 25 0;
#X connect 30 0 33 0;
#X connect 32 0 23 1;
#X connect 33 0 32 0;
#X connect 35 0 36 0;
#X connect 35 1 36 1;
#X connect 36 0 37 0;
#X connect 37 0 29 0;
#X connect 37 1 30 0;
