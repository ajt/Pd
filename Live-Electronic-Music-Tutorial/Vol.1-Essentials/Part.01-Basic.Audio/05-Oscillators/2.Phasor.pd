#N canvas 391 44 995 627 12;
#X obj 100 56 cnv 15 300 290 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 133 226 cnv 15 248 110 empty empty empty 20 12 0 14 -220534
-66577 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array seno 441 float 0;
#X coords 0 1 440 -1 250 112 1;
#X restore 133 225 graph;
#X text 120 218 1;
#X text 114 326 -1;
#X obj 136 78 cnv 15 248 110 empty empty empty 20 12 0 14 -220534 -66577
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array fase 441 float 0;
#X coords 0 1 440 0 250 112 1;
#X restore 135 77 graph;
#X text 120 174 0;
#X text 118 72 1;
#X text 118 108 F;
#X text 118 118 A;
#X text 118 129 S;
#X text 118 139 E;
#X text 118 261 A;
#X text 118 271 M;
#X text 118 282 P;
#X text 105 124 |;
#X text 107 124 |;
#X text 106 117 ^;
#X text 105 272 |;
#X text 107 272 |;
#X text 106 265 ^;
#N canvas 781 388 321 300 plot 0;
#X obj 127 84 t b f;
#X obj 143 168 sin~;
#X obj 142 113 phasor~ 100;
#X obj 127 213 tabwrite~ seno;
#X obj 106 236 tabwrite~ fase;
#X obj 46 103 setdsp~ 1;
#X obj 127 63 initmess 0;
#X connect 0 0 3 0;
#X connect 0 0 4 0;
#X connect 0 1 2 1;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 2 0 4 0;
#X connect 6 0 0 0;
#X restore 330 206 pd plot;
#X obj 541 404 cnv 15 344 84 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 699 173 sin~;
#X obj 699 129 phasor~;
#X obj 699 87 sig~ 200;
#X obj 486 218 graph~ 430 17;
#X obj 699 218 graph~ 430 17;
#X text 19 9 In this example we'll implement an oscillator with the
sine function (object [sin~]) and the native [phasor~] object., f
54;
#X text 227 201 time ===>;
#X text 29 450 The [phasor~] object generates a phase signal like the
green graph above. Its output are angles in a linear scale from 0 to
1 \, which represents a full cycle \, but that requires objects that
take that linear input from 0 to 1 as a full cyle such as [cos~] and
[sin~].;
#X text 29 531 The [phasor~] input is a frequency in cycles per second
(or "hertz"). This is a unit of angular velocity and determines how
many times per second we have a full cycle from 0 to 1 \, see the patch
to the right., f 60;
#X text 709 107 <= angular velocity / frequency;
#X text 708 196 <= waveform;
#X text 492 19 The output of [phasor~] never really reaches "1" \,
as it wraps back to "0" \, but note that its cyclical nature implies
that "1" would be the same as 0 \, in the same way that 360° is the
same as 0°, f 62;
#X text 706 149 <= angle position (running phase*);
#X text 550 410 * The [phasor~] output can be referred to as "running
phase". The object takes an angular valocity that defines an increment
phase value for each sample \, which is the step that phase runs at.
, f 46;
#X text 29 366 Above we have two graphs where the horizontal axis represent
time. In the upper one we have phase in the vertical axis \, which
increases at a constant rate \, generating a linear ramp. The lower
graph shows us the resulting sine output \, with amplitude in the vertical
axis.;
#X obj 816 537 sine~;
#X text 569 524 The [sine~] object from the ELSE library is a sinusoidal
oscillator:, f 37;
#X connect 24 0 28 0;
#X connect 25 0 24 0;
#X connect 25 0 27 0;
#X connect 26 0 25 0;
