#N canvas 261 122 1015 532 12;
#X obj 210 325 *~;
#X obj 231 277 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X obj 228 303 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 260 395 nbx 8 20 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 14
-228856 -1 -1 0 256;
#X obj 260 450 nbx 8 20 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 14
-228856 -1 -1 -999 256;
#X text 377 455 RMS (dB);
#X text 374 398 RMS (linear);
#X obj 210 243 osc~ 500;
#X text 310 303 (linear);
#N canvas 248 23 996 521 RMS 1;
#X obj 219 299 / 1024;
#X obj 219 374 sqrt;
#X floatatom 219 339 8 0 0 0 - - -, f 8;
#X msg 219 441 \; rms const \$1;
#X floatatom 219 255 8 0 0 0 - - -, f 8;
#X obj 155 85 t b f;
#X obj 131 25 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X floatatom 128 51 0 0 0 0 - - -;
#X obj 61 291 osc~ 500;
#X obj 110 360 *~;
#X obj 453 191 cnv 15 498 238 empty empty empty 20 12 0 14 -233017
-66577 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array sine 1027 float 0;
#X array rms 1027 float 0;
#X coords 0 1 1026 -1 500 240 1;
#X restore 452 190 graph;
#X text 441 182 1;
#X text 440 302 0;
#X text 434 419 -1;
#X obj 219 415 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 110 416 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 19 414 RMS (linear);
#X obj 110 390 rms~;
#X obj 155 151 loop 1024;
#X obj 170 188 t b b;
#X msg 170 227 0;
#X msg 204 90 \; sine sinesum 1024 \$1;
#X text 253 375 square root;
#X text 286 333 arithmetic mean, f 10;
#X text 273 292 divide by table size, f 11;
#X text 283 249 sum of all values squared, f 14;
#X obj 219 219 v sum;
#X text 226 151 loop of 1024 iterations;
#X text 168 124 creates a sine into a table with 1024 points;
#X text 268 26 Peak Amplitude (linear);
#X obj 219 185 expr pow(sine[$f1] \, 2) + sum;
#X text 464 68 The Root Mean Square is obtained by the square root
of the arithmetic mean of the squares of a set of values. To the left
\, we calculate that step by step in a patch and compare it to the
analysis of [rms~]., f 70;
#X text 543 132 Below we have the graph of the resulting sinusoid and
the root mean square line for this period window.;
#X text 305 413 RMS (linear);
#X connect 0 0 2 0;
#X connect 1 0 15 0;
#X connect 2 0 1 0;
#X connect 4 0 0 0;
#X connect 5 0 19 0;
#X connect 5 1 22 0;
#X connect 6 0 7 0;
#X connect 7 0 5 0;
#X connect 7 0 9 1;
#X connect 8 0 9 0;
#X connect 9 0 18 0;
#X connect 15 0 3 0;
#X connect 18 0 16 0;
#X connect 19 0 31 0;
#X connect 19 1 20 0;
#X connect 20 0 21 0;
#X connect 20 1 27 0;
#X connect 21 0 27 0;
#X connect 27 0 4 0;
#X connect 31 0 27 0;
#X restore 807 150 pd RMS;
#X obj 123 394 nbx 8 20 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 14
-228856 -1 -1 0 256;
#X obj 123 447 nbx 8 20 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 14
-228856 -1 -1 -999 256;
#X obj 123 369 peak~ 4096;
#X obj 260 367 rms~ 4096;
#X obj 260 423 lin2db;
#X obj 123 421 lin2db;
#X obj 566 101 noise~;
#X obj 657 137 env~;
#X obj 657 165 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 95.1987 256;
#X obj 92 250 setdsp~ 1;
#X obj 566 140 rms~ -db;
#X obj 566 167 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 -4.80128 256;
#X obj 615 312 noise~;
#X obj 615 426 print~;
#X obj 582 396 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X msg 684 305 linear;
#X msg 701 329 db;
#X obj 615 391 else/display~;
#X text 51 24 Peak amplitude is the highest absolute amplitude in a
time window \, and RMS is given as a root mean square \, which is useful
for signals that vary from negative to positive \, as it is the case
with audio., f 60;
#X text 528 22 Both [peak~] and [rms~] are based on Pd's native [env~]
object \, which reports the RMS amplitude \, but in a different dB
standard scale (from 0 to 100). The [peak~] and [rms~] objects can
report the ampitude as either linear or dBFS.;
#X text 244 277 Peak Amplitude;
#X text 29 395 Peak (linear);
#X text 53 446 Peak (dB);
#X text 51 97 A mean average has a better analytical advantage as it
takes into account all samples in a time window \, not only the highest
one. The [rms~] object from ELSE reports us the RMS amplitude \, while
[peak~] \, also from ELSE \, reports us the peak amplitude.;
#X text 51 176 See both in action below and note how the RMS is about
3 dB lower than the peak amplitude for sinusoids., f 60;
#X text 756 129 More about RMS:;
#X obj 615 357 else/mov.rms~ 4096;
#X text 749 358 window size of 4096;
#X text 730 329 dBFS output;
#X text 732 304 linear output;
#X text 522 214 The [mov.rms~] \, from ElSEl \, gives us another kind
of RMS that is "moving". This means it returns a different RMS value
for each sample \, according to an analysis done in the previous samples.
Check more info about every object here in their help files., f 62
;
#X connect 0 0 12 0;
#X connect 0 0 13 0;
#X connect 1 0 2 0;
#X connect 2 0 0 1;
#X connect 3 0 14 0;
#X connect 7 0 0 0;
#X connect 10 0 15 0;
#X connect 12 0 10 0;
#X connect 13 0 3 0;
#X connect 14 0 4 0;
#X connect 15 0 11 0;
#X connect 16 0 17 0;
#X connect 16 0 20 0;
#X connect 17 0 18 0;
#X connect 20 0 21 0;
#X connect 22 0 36 0;
#X connect 24 0 23 0;
#X connect 25 0 36 0;
#X connect 26 0 36 0;
#X connect 27 0 23 0;
#X connect 36 0 27 0;
