#N canvas 160 67 1129 615 12;
#X msg 180 241 2;
#X obj 180 295 else/display;
#X obj 621 198 else/display;
#X obj 607 133 nbx 10 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0
12 -228856 -1 -1 3 256;
#X obj 607 387 route sign exponent mantissa, f 33;
#X msg 607 312 set \$1 \, split;
#X text 698 419 mantissa;
#X obj 759 417 else/display;
#X obj 683 450 else/display;
#X obj 607 417 else/display;
#X obj 621 170 float2bits;
#X obj 607 344 float2bits;
#X text 29 29 The sample rate regards a timing resolution. Now the
amplitude resolution depends on the bit rate or bit depth., f 75;
#X text 29 144 1 bit is a binary unit \, which can be either 0 or 1
\, so only 2 possible values \, or 2^1 (two to the power of one). The
MIDI protocol has 7 bits \, which gives us 2^7 = 128 possible values
\, in the range of 0 - 127! CD's audio standard is 16 bits \, which
gives us 2^16 (65.536) possible values., f 75;
#X obj 180 218 loadbang;
#X text 233 299 <= possible values in 16 bits;
#X text 29 345 Pd currently has 32 bits precision \, more precisely
\, this is 32 bit float \, which means some of the bits are used to
represent decimal values and not only inside the -1 to 1 range \, but
all numbers. Hence we do not have 2^32 possible values for audio signals.
, f 75;
#X text 575 420 sign;
#X obj 180 266 pow 16;
#X text 596 57 The [float2bits] object from ELSE converts floats in
Pd to a list of 32 bits \, that is the binary representation of this
number., f 59;
#X text 629 455 expoent;
#X text 628 244 The object can also break this into different groups
of bits. The sign (0 = positive \, 1 = negative) \, the expoent (8
bits) and the mantissa (23 bits)., f 61;
#X text 29 63 Mas e os valores de amplitude (de -1 a 1) \, qual seria
a resolução deles? E o nÃºmero de valores possÃ­veis? A resposta é
que varia \, pois o formato de 32 bit float fornece mais resoluÃ§Ã£o
para representar valores menores e muito pequenos. Em suma e a grosso
modo \, podemos dizer que essa precisão é igual ou maior que os 24
bits!, f 75;
#X text 29 411 So what's the resolution after all? How many possible
values do we have between -1 and 1? This is tricky to answer. 32 bit
float provides more resolution to represent very tiny values than bigger
decimal ones. But we can make a rough assessment of a more or less
24 bit resolution for audio output!, f 75;
#X text 29 487 One way or another \, the final audio resolution depends
on your sound card. If you have a cheap one that can only deal with
16 bits \, then that's what you have. But anyway \, even though many
professional audio cards say they operate with 24 bit precision \,
it is a known fact they can't actually perform that task., f 75;
#X connect 0 0 18 0;
#X connect 3 0 10 0;
#X connect 3 0 5 0;
#X connect 4 0 9 0;
#X connect 4 1 8 0;
#X connect 4 2 7 0;
#X connect 5 0 11 0;
#X connect 10 0 2 0;
#X connect 11 0 4 0;
#X connect 14 0 0 0;
#X connect 18 0 1 0;
