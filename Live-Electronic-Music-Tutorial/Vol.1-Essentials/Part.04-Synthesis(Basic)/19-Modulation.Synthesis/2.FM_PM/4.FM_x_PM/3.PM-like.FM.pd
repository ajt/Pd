#N canvas 419 57 490 582 12;
#X obj 150 318 sine~;
#X obj 126 240 f2s~ 50;
#X obj 199 319 *~;
#X obj 248 314 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 181 370 *~;
#X obj 199 282 *~;
#X obj 217 253 f2s~ 10;
#X obj 217 226 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 126 218 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 126 407 +~;
#X text 125 196 Carrier;
#X text 307 312 Index;
#X obj 126 452 sine~;
#X obj 126 496 out~;
#X obj 251 287 hsl 128 15 1 10 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X obj 248 341 f2s~ 50;
#X obj 220 197 hsl 128 15 0.5 2 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X text 40 21 We've seen how to generate FM patches that produce the
same result as PM more for didactical purposes \, as it is not quite
practical to do that \, just use PM if that's what you want.;
#X text 40 88 Nonetheless \, it is quite common to see FM patches that
do multiply the modulator frequency by the modulation index. This is
clearly an adaptation to make the FM more like PM. This is quite easy
to implement and does not complicate the patch very much.;
#X text 212 370 <= multiply index by modulator freq., f 18;
#X text 277 223 Harmonic Ratio;
#X connect 0 0 4 0;
#X connect 1 0 5 0;
#X connect 1 0 9 0;
#X connect 2 0 4 1;
#X connect 3 0 15 0;
#X connect 4 0 9 1;
#X connect 5 0 0 0;
#X connect 5 0 2 0;
#X connect 6 0 5 1;
#X connect 7 0 6 0;
#X connect 8 0 1 0;
#X connect 9 0 12 0;
#X connect 12 0 13 0;
#X connect 12 0 13 1;
#X connect 14 0 3 0;
#X connect 15 0 2 1;
#X connect 16 0 7 0;
