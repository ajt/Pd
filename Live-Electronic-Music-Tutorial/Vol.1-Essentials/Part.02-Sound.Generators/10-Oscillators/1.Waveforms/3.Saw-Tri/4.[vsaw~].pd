#N canvas 478 26 496 493 12;
#N canvas 786 159 450 300 sequencer 0;
#X obj 195 193 mtof;
#X obj 72 132 metro 200;
#N canvas 0 22 450 300 (subpatch) 0;
#X array sequencer 16 float 3;
#A 0 -6 -8 -8 -3 -8 1 4 4 -3 -5 -5 -1 2 6 7 7;
#X coords 0 12 16 -12 100 70 1;
#X restore 223 104 graph;
#X obj 72 193 v i;
#X obj 195 221 outlet;
#X obj 72 107 inlet;
#X obj 72 155 expr (i + 1) % 16 \; sequencer[i] + 46;
#X connect 0 0 4 0;
#X connect 1 0 6 0;
#X connect 5 0 1 0;
#X connect 6 0 3 0;
#X connect 6 1 0 0;
#X restore 65 216 pd sequencer;
#X obj 65 187 tgl 18 0 empty empty empty 17 7 0 10 -228856 -1 -1 1
1;
#X obj 167 190 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 12700 1;
#X obj 164 215 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 1 256;
#X obj 216 324 else/graph~ 447 5;
#X obj 142 273 vsaw~ 98.5;
#X obj 99 364 out~;
#X text 29 98 Its second inlet/argument changes the "width" and controls
the waveform. Check its help file for more info., f 59;
#X text 205 189 width;
#X obj 164 240 f2s~ 10;
#X obj 164 162 tgl 18 0 empty empty empty 17 7 0 10 -228856 -1 -1 1
1;
#X text 29 21 The ELSE library also provides the [vsaw~] object (from
"variable saw"). This is an oscillator that can generate varied waveforms
\, from sawtooths to triangular. Also note that a width of 0 and 1
are the same \, but with the polarity inverted.;
#X text 186 160 (0 and 1 invert the polarity);
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 9 0;
#X connect 5 0 4 0;
#X connect 5 0 6 0;
#X connect 5 0 6 1;
#X connect 9 0 5 1;
#X connect 10 0 2 0;
