#N canvas 389 23 1034 521 12;
#X obj 301 250 bng 17 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 301 276 tabplay~ \$0-IR;
#X obj 301 314 out~;
#X text 325 250 Play IR:;
#X obj 617 373 out~;
#X text 45 26 Partitioned convolution divides the IR into smaller bits
so we get much shorter latencies suitable for live input. The convolution
is done in each partition separately.;
#X text 46 84 We can implement this in a Pd patch by loading different
instances of each partition inside [clone]. In this way \, an input
is convoluted to all partitions at the same time \, but they're delayed
accordingly so they get added at the right time.;
#X obj 658 220 *~;
#X obj 676 153 bng 20 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 45 167 The [conv~] object from the ELSE library is an abstraction
that implements partitioned convolution this way. It needs a partition
size and an audio file to load as an IR. Below we load a rather bizarre
IR file: a voice sample \, also used in Pd Vanilla's example.;
#X obj 60 305 sample~ \$0-IR ../../../../samples/voice.wav, f 29;
#X obj 660 331 conv~ 1024 ../../../../samples/voice.wav;
#X floatatom 553 155 5 0 0 0 - - -;
#X obj 553 183 standard~ 100;
#X obj 676 182 envgen~ 500 1 150 0;
#X text 55 396 This is to reinforce the idea of using convolution as
a general sound processor. It's been noted that conviolution is widely
used as a reverberator \, but you can also think of it as a filter.
We'll get back to convolution when we discuss in depth filters and
reverbs \, but for now let's have fun with it in a more creative way.
;
#X obj 768 243 play.file~ ../../../../samples/bubul.wav 1 1, f 34
;
#X obj 704 212 tgl 20 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 704 245 + 1;
#X obj 659 288 xselect~ 2 100 1;
#X text 519 20 The sound input in the convolution is a chaotic oscillator.
Since the IR actually sounds more like an input \, we can think of
the input as the actual IR \, since the operation is commutative (convoluting
a and B is the same as convoluting B and A). We also have an envelope
generator to control the incoming sound. As an alternative \, we also
have a sample input that you can select with [xselect~]., f 68;
#X text 729 213 <= change input;
#X obj 535 266 out~;
#X text 724 402 <= watch it \, this can get loud!!!;
#X text 546 445 Check the help file of [conv~] for more details on
it.;
#X connect 0 0 1 0;
#X connect 1 0 2 1;
#X connect 1 0 2 0;
#X connect 7 0 19 0;
#X connect 8 0 14 0;
#X connect 11 0 4 0;
#X connect 11 0 4 1;
#X connect 12 0 13 0;
#X connect 13 0 7 0;
#X connect 13 0 22 0;
#X connect 13 0 22 1;
#X connect 14 0 7 1;
#X connect 16 0 19 1;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 11 0;
