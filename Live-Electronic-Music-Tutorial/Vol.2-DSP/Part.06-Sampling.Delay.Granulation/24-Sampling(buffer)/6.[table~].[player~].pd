#N canvas 381 84 963 372 12;
#X obj 371 213 phasor~;
#X obj 371 290 out~;
#X obj 402 184 r \$0-hz;
#X obj 69 305 s \$0-hz;
#X obj 371 184 *~;
#X obj 69 279 /;
#X obj 69 254 swap;
#X obj 371 250 table~ \$0-buffer;
#X obj 371 148 display~ 8;
#X text 442 152 Ratio;
#X obj 371 40 rampnoise~ 0.25;
#X obj 371 71 *~ 3;
#X text 30 117 The ratio is now controlled by a random ramp generator.
, f 42;
#X obj 554 253 player~ ../../../samples/violin.wav 1 1;
#X obj 646 290 out~;
#X msg 554 223 speed \$1;
#X obj 554 202 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 16.3996 256;
#X obj 554 177 * 100;
#X text 30 38 In this example we use [table~] from the ELSE library.
One advantage that makes it simpler is that we don't need to bother
multiplying the output of [phasor~] \, as the index input is mapped
from 0 to 1!, f 42;
#X obj 554 151 s2f~;
#X obj 69 223 unpack;
#X obj 69 182 sample~ \$0-buffer ../../../samples/violin.wav, f 27
;
#X text 522 22 But even much more convenient is the [player~] object
from ELSE. This is an abstraction that relyes on [tabread4~] and already
loads a file internally. Like [sampler~] \, it has multi channel support
and can query the number of channels from a sound file given as an
argument (a stereo file in this example). Check its help file for more
details and features.;
#X connect 0 0 7 0;
#X connect 2 0 4 1;
#X connect 4 0 0 0;
#X connect 5 0 3 0;
#X connect 6 0 5 0;
#X connect 6 1 5 1;
#X connect 7 0 1 0;
#X connect 7 0 1 1;
#X connect 8 0 4 0;
#X connect 10 0 11 0;
#X connect 11 0 8 0;
#X connect 11 0 19 0;
#X connect 13 0 14 0;
#X connect 13 1 14 1;
#X connect 15 0 13 0;
#X connect 16 0 15 0;
#X connect 17 0 16 0;
#X connect 19 0 17 0;
#X connect 20 0 6 0;
#X connect 20 1 6 1;
#X connect 21 0 20 0;
