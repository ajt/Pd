#N canvas 349 23 907 531 12;
#X obj 144 215 hsl 200 15 0 7 0 0 empty slider empty -2 -8 0 10 -228856
-1 -1 1421 0;
#X obj 173 291 expr interpolation[i] \; interpolation[i + 1] \; $f1
- i \; int($f1);
#X obj 141 244 t b f;
#X obj 268 405 v frac;
#X obj 324 384 v i;
#X floatatom 141 468 8 0 0 0 - - value, f 8;
#X obj 141 440 expr a * (1 - frac) + (b * frac);
#X obj 173 388 v a;
#X obj 223 388 v b;
#X text 178 408 i;
#X text 223 408 i+1;
#X floatatom 173 364 0 0 0 0 - - -;
#X floatatom 223 364 0 0 0 0 - - -;
#X floatatom 268 372 6 0 0 0 - - -, f 6;
#X floatatom 324 358 0 0 0 0 - - -;
#X obj 551 254 cnv 15 198 198 empty \$0-lin . 1 40 0 44 -257983 -258113
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array interpolation 8 float 0;
#X coords 0 1 7 -1 200 200 1 0 0;
#X restore 550 253 graph;
#N canvas 33 202 517 391 plot 0;
#X msg 123 308 label_pos \$2 \$1;
#X obj 123 282 pack;
#X obj 89 194 r value;
#X obj 89 220 * -100;
#X obj 154 202 / 7;
#X obj 154 178 r index;
#X obj 89 247 + 90;
#X obj 153 256 - 13;
#X obj 153 229 * 200;
#X obj 123 336 s \$0-lin;
#X msg 278 302 label_pos \$2 \$1;
#X obj 278 276 pack;
#X obj 318 196 / 7;
#X obj 278 330 s \$0-dot;
#X obj 244 214 * -100;
#X obj 318 171 r index;
#X obj 244 178 r value4;
#X obj 244 241 + 87;
#X obj 317 250 - 37;
#X obj 317 222 * 176;
#X obj 55 43 initmess \; interpolation 0 1 0 0.7 -0.3 0 -1 1 0 \, xticks
0 1 1 \, xlabel -1.1 0 1 2 3 4 5 6 7 \; lagrange 0 0.9 0 -0.5 0.3 0.6
0.9 0 -0.5, f 52;
#X connect 0 0 9 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 8 0;
#X connect 5 0 4 0;
#X connect 6 0 1 0;
#X connect 7 0 1 1;
#X connect 8 0 7 0;
#X connect 10 0 13 0;
#X connect 11 0 10 0;
#X connect 12 0 19 0;
#X connect 14 0 17 0;
#X connect 15 0 12 0;
#X connect 16 0 14 0;
#X connect 17 0 11 0;
#X connect 18 0 11 1;
#X connect 19 0 18 0;
#X restore 697 234 pd plot;
#X obj 173 269 nbx 5 14 -1e+37 1e+37 0 0 index empty empty 0 -8 0 10
-228856 -1 -1 0.5 256;
#X text 768 451 (n = 8);
#X text 33 32 Interpolation is needed to find values in between samples
or indexes in a table - such as 1.5 as a mid point between 1 and 2
values \, for example. A sound file is an array of samples \, where
each index corresponds to a sample amplitude value., f 58;
#X text 33 111 The [readsf~] object does not interpolate so it can
only play the file at the same speed Pd is running or multiple ones
(twice as fast / twice as slow \, etc). Interpolation makes it possible
to play at different speeds \, such as 1.5x faster \, as it'll find
fractional mid values between samples., f 58;
#X text 233 267 index;
#X text 317 407 fractional part;
#X text 353 384 integer index;
#X text 205 468 Linear interpolation between "a" & "b";
#X text 468 48 At least two points are needed for interpolation such
as in a linear interpolation. Arrays in Pd that are drawn as polygons
do visually display a linear interpolation to connect the array's points.
, f 53;
#X text 468 125 Let's see this example with an 8 point array. Below
we calculate the interpolation (indicated by the red dot)., f 53;
#X obj 338 291 initmess \; slider 0.5;
#X connect 0 0 2 0;
#X connect 1 0 11 0;
#X connect 1 1 12 0;
#X connect 1 2 13 0;
#X connect 1 3 14 0;
#X connect 2 0 6 0;
#X connect 2 1 18 0;
#X connect 6 0 5 0;
#X connect 11 0 7 0;
#X connect 12 0 8 0;
#X connect 13 0 3 0;
#X connect 14 0 4 0;
#X connect 18 0 1 0;
