#N canvas 788 70 551 449 12;
#X text 335 265 cents;
#X obj 317 287 nbx 5 16 -1e+37 1e+37 0 0 empty \$0-cents empty 0 -8
0 13 -228856 -1 -1 -400 256;
#X obj 224 286 nbx 4 16 -1e+37 1e+37 0 0 empty \$0-speed empty 0 -8
0 13 -228856 -1 -1 50 256;
#X obj 410 286 nbx 4 16 64 8192 0 0 empty \$0-block empty 0 -8 0 13
-228856 -1 -1 2048 256;
#X msg 424 170 512;
#X msg 447 236 1024;
#X msg 438 193 2048;
#X msg 410 146 8192;
#X msg 442 215 4096;
#X obj 224 366 out~;
#X obj 55 212 delwrite~ \$0-buffer 6000;
#X text 433 267 size;
#X text 231 266 speed;
#N canvas 475 45 840 752 pitch-shift/time-stretch 0;
#X obj 51 257 bang~;
#X obj 123 246 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-204800 -1 -1 1024 256;
#X obj 152 695 outlet~;
#X obj 123 34 inlet;
#X obj 354 34 inlet;
#X msg 373 290 set \$1;
#X obj 235 543 phasor~;
#X obj 239 34 inlet;
#X obj 239 94 nbx 5 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 15
-236782 -1 -1 -400 256;
#X obj 123 95 nbx 5 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 15
-183865 -1 -1 50 256;
#X obj 354 253 nbx 5 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 15
-257904 -1 -1 2048 256;
#X obj 217 614 *~;
#X obj 152 661 +~;
#X obj 373 318 block~;
#X obj 105 275 +;
#X obj 152 633 *~;
#X floatatom 354 570 4 0 0 0 - - -;
#X obj 354 509 / 2;
#X floatatom 239 163 0 0 0 0 - - -;
#X obj 567 94 loadbang;
#X obj 51 287 f;
#X obj 123 123 / 100;
#X obj 141 474 +~;
#X obj 567 200 s \$0-buf_size;
#X obj 137 273 r \$0-buf_size;
#X obj 584 146 s \$0-buf_ms;
#X obj 180 480 r \$0-buf_ms;
#X obj 239 407 / 2;
#X obj 51 410 pack f f f;
#X obj 139 411 +;
#X text 150 302 loop;
#X msg 567 121 6000;
#X obj 105 301 wrap2;
#X obj 51 331 samps2ms;
#X obj 217 640 ffdelay~ 4096 -samps;
#X obj 235 515 blocksize~ -hz;
#X obj 235 570 envelope~;
#X obj 141 532 wrap2~;
#X obj 51 547 wrap2~;
#X obj 51 434 envgen~;
#X obj 239 127 cents2ratio;
#X obj 567 174 ms2samps;
#X text 131 69 speed (%);
#X obj 51 573 delread4~ \$0-buffer, f 9;
#X obj 141 555 delread4~ \$0-buffer, f 9;
#X obj 123 217 *;
#X obj 123 188 hot;
#X text 254 71 cents;
#X text 370 227 size;
#X obj 51 356 t f f;
#X obj 257 282 samps2ms;
#X floatatom 239 379 0 0 0 0 - - -;
#X obj 239 323 hot;
#X obj 239 352 *;
#X text 173 378 new size;
#X text 159 217 step;
#X obj 239 197 expr 1 - $f1;
#X obj 123 157 expr 1 - $f1;
#X text 479 308 This is pretty straight forward adaptation of the earlier
example. Both speed and transposition ratio now need to account for
the read head speed \, and since we now read from [delread4~] instead
of [tabread4~] \, we need values in ms instead of samples., f 43;
#X text 274 408 overlap;
#X text 382 508 overlap;
#X text 479 411 For the overlapping second grain \, we need to sum
to half the new grain size instead of subtracting because this means
"back' in the bufffer., f 43;
#X connect 0 0 20 0;
#X connect 1 0 14 1;
#X connect 3 0 9 0;
#X connect 4 0 10 0;
#X connect 5 0 13 0;
#X connect 6 0 36 0;
#X connect 7 0 8 0;
#X connect 8 0 40 0;
#X connect 9 0 21 0;
#X connect 10 0 5 0;
#X connect 10 0 17 0;
#X connect 10 0 46 1;
#X connect 10 0 50 0;
#X connect 11 0 34 0;
#X connect 12 0 2 0;
#X connect 14 0 32 0;
#X connect 15 0 12 0;
#X connect 16 0 34 1;
#X connect 17 0 16 0;
#X connect 18 0 56 0;
#X connect 19 0 31 0;
#X connect 20 0 14 0;
#X connect 20 0 33 0;
#X connect 21 0 57 0;
#X connect 22 0 37 0;
#X connect 24 0 32 2;
#X connect 26 0 37 2;
#X connect 26 0 38 2;
#X connect 27 0 22 1;
#X connect 28 0 39 0;
#X connect 29 0 28 2;
#X connect 31 0 25 0;
#X connect 31 0 41 0;
#X connect 32 0 20 1;
#X connect 33 0 49 0;
#X connect 35 0 6 0;
#X connect 36 0 11 1;
#X connect 36 0 15 1;
#X connect 37 0 44 0;
#X connect 38 0 43 0;
#X connect 39 0 22 0;
#X connect 39 0 38 0;
#X connect 40 0 18 0;
#X connect 41 0 23 0;
#X connect 43 0 15 0;
#X connect 44 0 11 0;
#X connect 45 0 1 0;
#X connect 46 0 45 0;
#X connect 46 1 45 1;
#X connect 49 0 28 0;
#X connect 49 1 29 0;
#X connect 50 0 52 1;
#X connect 50 0 28 1;
#X connect 51 0 29 1;
#X connect 51 0 27 0;
#X connect 52 0 53 0;
#X connect 52 1 53 1;
#X connect 53 0 51 0;
#X connect 56 0 52 0;
#X connect 57 0 46 0;
#X restore 224 320 pd pitch-shift/time-stretch;
#X text 81 31 This example now adapts an earlier pitch shit / time
stretch patch in which the grain size depends on the block size. As
the earlier one \, this is the basis of a Phase Vocoder example presented
later. Open the subpatch for details., f 52;
#X obj 55 254 initmess \; \$0-speed 50 \; \$0-cents -400 \; \$0-block
2048;
#X obj 55 161 play.file~ ../../../../../samples/bubul.wav 1 1;
#X connect 1 0 13 1;
#X connect 2 0 13 0;
#X connect 3 0 13 2;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 6 0 3 0;
#X connect 7 0 3 0;
#X connect 8 0 3 0;
#X connect 13 0 9 0;
#X connect 13 0 9 1;
#X connect 16 0 10 0;
